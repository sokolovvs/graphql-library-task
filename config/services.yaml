# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/tests'
            - '../src/Dto'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Interfaces\Repository\AuthorRepositoryInterface:
        alias: App\Repository\AuthorRepository

    App\Interfaces\Repository\BookRepositoryInterface:
        alias: App\Repository\BookRepository

    App\GraphQL\Resolver\AuthorResolver:
        tags:
            - { name: overblog_graphql.query, method: author, alias: author }
            - { name: overblog_graphql.query, method: authors, alias: authors }

    App\GraphQL\Mutator\AuthorMutator:
        tags:
            - { name: overblog_graphql.mutation, method: createAuthor, alias: createAuthor }
            - { name: overblog_graphql.mutation, method: editAuthor, alias: editAuthor }
            - { name: overblog_graphql.mutation, method: deleteAuthor, alias: deleteAuthor }

    App\GraphQL\Resolver\BookResolver:
        tags:
            - { name: overblog_graphql.query, method: book, alias: book }
            - { name: overblog_graphql.query, method: books, alias: books }

    App\GraphQL\Mutator\BookMutator:
        tags:
            - { name: overblog_graphql.mutation, method: createBook, alias: createBook }
            - { name: overblog_graphql.mutation, method: editBook, alias: editBook }
            - { name: overblog_graphql.mutation, method: deleteBook, alias: deleteBook }

    App\EventListener\AuthorBooksEventListener:
      tags:
        - { name: doctrine.event_listener, event: onFlush }