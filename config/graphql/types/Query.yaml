Query:
  type: object
  config:
    fields:
      author:
        type: Author!
        args:
          id:
            type: Int!
            description: "The id of the author"
        resolve: '@=query("App\\GraphQL\\Resolver\\AuthorResolver::author", args["id"])'
      authors:
        type: "[Author!]!"
        args:
          filters:
            type: AuthorFilters
            validation: cascade
        resolve: '@=query("App\\GraphQL\\Resolver\\AuthorResolver::authors", args["filters"] ?? [])'
      countAuthors:
        type: Int!
        args:
          filters:
            type: AuthorFilters
            validation: cascade
        resolve: '@=query("App\\GraphQL\\Resolver\\AuthorResolver::countAuthors", args["filters"] ?? [])'
      book:
        type: Book!
        args:
          id:
            type: Int!
            description: "The id of the book"
        resolve: '@=query("App\\GraphQL\\Resolver\\BookResolver::book", args["id"])'
      books:
        type: "[Book!]!"
        args:
          filters:
            type: BooksFilters
            validation: cascade
        resolve: '@=query("App\\GraphQL\\Resolver\\BookResolver::books", args["filters"] ?? [])'
      countBooks:
        type: Int!
        args:
          filters:
            type: BooksFilters
            validation: cascade
        resolve: '@=query("App\\GraphQL\\Resolver\\BookResolver::countBooks", args["filters"] ?? [])'